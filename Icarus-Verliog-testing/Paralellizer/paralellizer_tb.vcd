$date
	Sun May  5 23:59:38 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Paralellizer_tb $end
$var wire 3 ! state_out [2:0] $end
$var wire 1 " qspi_ready $end
$var wire 4 # key_rotation_out [3:0] $end
$var wire 16 $ key_out [15:0] $end
$var wire 3 % key_index_out [2:0] $end
$var wire 1 & key_encrypter_index_out $end
$var wire 4 ' encrypters_program [3:0] $end
$var wire 4 ( encrypters_data_ready [3:0] $end
$var wire 3 ) encrypter_index_out [2:0] $end
$var wire 16 * encrypter_data_packet_out [15:0] $end
$var wire 3 + encrypter_data_index_out [2:0] $end
$var reg 1 , clk $end
$var reg 16 - encrypters_data_slice [15:0] $end
$var reg 4 . encrypters_ready [3:0] $end
$var reg 1 / prog $end
$var reg 4 0 qspi_data [3:0] $end
$var reg 1 1 qspi_sending $end
$var reg 1 2 reset $end
$var integer 32 3 fd [31:0] $end
$var integer 32 4 i [31:0] $end
$scope module uut $end
$var wire 1 , clk $end
$var wire 4 5 encrypters_ready [3:0] $end
$var wire 1 / prog $end
$var wire 4 6 qspi_data [3:0] $end
$var wire 1 1 qspi_sending $end
$var wire 1 2 reset $end
$var reg 3 7 encrypter_data_index [2:0] $end
$var reg 3 8 encrypter_data_index_out [2:0] $end
$var reg 16 9 encrypter_data_packet [15:0] $end
$var reg 16 : encrypter_data_packet_out [15:0] $end
$var reg 5 ; encrypter_data_subindex [4:0] $end
$var reg 3 < encrypter_index [2:0] $end
$var reg 3 = encrypter_index_out [2:0] $end
$var reg 4 > encrypters_data_ready [3:0] $end
$var reg 4 ? encrypters_program [3:0] $end
$var reg 16 @ key [15:0] $end
$var reg 1 A key_encrypter_index $end
$var reg 1 & key_encrypter_index_out $end
$var reg 3 B key_index [2:0] $end
$var reg 3 C key_index_out [2:0] $end
$var reg 16 D key_out [15:0] $end
$var reg 4 E key_rotation [3:0] $end
$var reg 3 F key_rotation_index [2:0] $end
$var reg 4 G key_rotation_out [3:0] $end
$var reg 1 " qspi_ready $end
$var reg 3 H state [2:0] $end
$var reg 3 I state_out [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 I
b0 H
bx G
bx F
bx E
b0 D
b0 C
b0 B
xA
b0 @
b0 ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
b0 6
b0 5
b100000000 4
b10000000000000000000000000000011 3
02
01
b0 0
0/
b0 .
bx -
0,
bx +
bx *
bx )
bx (
b0 '
x&
b0 %
b0 $
bx #
0"
b0 !
$end
#1
1,
#2
1"
0,
12
#3
1,
#4
0,
02
#5
1,
#6
b1 !
b1 I
b1 H
0,
1/
#7
1,
#8
0,
0/
#9
1,
#10
b10 !
b10 I
b10 H
0,
bx 0
bx 6
b0 4
11
#11
b1 %
b1 C
b1 B
b0xxxx $
b0xxxx D
b0xxxx @
1,
#12
0,
b1 4
#13
b10 %
b10 C
b10 B
b0xxxxxxxx $
b0xxxxxxxx D
b0xxxxxxxx @
1,
#14
0,
b10 4
#15
b11 %
b11 C
b11 B
b0xxxxxxxxxxxx $
b0xxxxxxxxxxxx D
b0xxxxxxxxxxxx @
1,
#16
0,
b11 4
#17
0"
0A
b11 !
b11 I
b11 H
b100 %
b100 C
b100 B
bx $
bx D
bx @
1,
#18
b100 !
b100 I
b100 H
1A
b1111 '
b1111 ?
b10000 ;
b100 )
b100 =
b100 <
0,
01
b100 4
#19
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
#20
0,
#21
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
#22
0,
#23
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
#24
0,
#25
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
#26
0,
#27
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
#28
0,
b1 .
b1 5
b0 4
#29
b100 )
b100 =
b100 <
b100 !
b100 I
b100 H
1,
b11 .
b11 5
b1 4
#30
0,
b111 .
b111 5
b10 4
#31
1"
b100 )
b100 =
b100 <
b0 !
b0 I
b0 H
1,
b1111 .
b1111 5
b11 4
#32
0,
b100 4
#33
1,
#34
0,
#35
1,
#36
b101 !
b101 I
b101 H
b0 #
b0 G
b0 E
b0 (
b0 >
b0 +
b0 8
b0 7
b0 )
b0 =
b0 <
0,
11
#37
b1 +
b1 8
b1 7
1,
#38
0,
b101 4
#39
b10 +
b10 8
b10 7
1,
#40
0,
b110 4
#41
b11 +
b11 8
b11 7
1,
#42
0,
b111 4
#43
b100 +
b100 8
b100 7
1,
#44
b1 #
b1 G
b1 E
b1 )
b1 =
b1 <
b1 (
b1 >
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b1000 4
#45
b1 +
b1 8
b1 7
1,
#46
0,
b1001 4
#47
b10 +
b10 8
b10 7
1,
#48
0,
b1010 4
#49
b11 +
b11 8
b11 7
1,
#50
0,
b1011 4
#51
b100 +
b100 8
b100 7
1,
#52
b10 #
b10 G
b10 E
b10 )
b10 =
b10 <
b11 (
b11 >
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b1100 4
#53
b1 +
b1 8
b1 7
1,
#54
0,
b1101 4
#55
b10 +
b10 8
b10 7
1,
#56
0,
b1110 4
#57
b11 +
b11 8
b11 7
1,
#58
0,
b1111 4
#59
b100 +
b100 8
b100 7
1,
#60
b11 #
b11 G
b11 E
b11 )
b11 =
b11 <
b111 (
b111 >
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b10000 4
#61
b1 +
b1 8
b1 7
1,
#62
0,
b10001 4
#63
b10 +
b10 8
b10 7
1,
#64
0,
b10010 4
#65
b11 +
b11 8
b11 7
1,
#66
0,
b10011 4
#67
b100 +
b100 8
b100 7
1,
#68
b0 #
b0 G
b0 E
b100 )
b100 =
b100 <
b1111 (
b1111 >
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b10100 4
#69
b1 +
b1 8
b1 7
1,
#70
0,
b10101 4
#71
b10 +
b10 8
b10 7
1,
#72
0,
b10110 4
#73
b11 +
b11 8
b11 7
1,
#74
0,
b10111 4
#75
b100 +
b100 8
b100 7
1,
#76
b1 #
b1 G
b1 E
b101 )
b101 =
b101 <
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b11000 4
#77
b1 +
b1 8
b1 7
1,
#78
0,
b11001 4
#79
b10 +
b10 8
b10 7
1,
#80
0,
b11010 4
#81
b11 +
b11 8
b11 7
1,
#82
0,
b11011 4
#83
b100 +
b100 8
b100 7
1,
#84
b10 #
b10 G
b10 E
b110 )
b110 =
b110 <
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b11100 4
#85
b1 +
b1 8
b1 7
1,
#86
0,
b11101 4
#87
b10 +
b10 8
b10 7
1,
#88
0,
b11110 4
#89
b11 +
b11 8
b11 7
1,
#90
0,
b11111 4
#91
b100 +
b100 8
b100 7
1,
#92
b11 #
b11 G
b11 E
b111 )
b111 =
b111 <
b100 F
b10000 ;
b0 +
b0 8
b0 7
0,
b100000 4
#93
b1 +
b1 8
b1 7
1,
#94
b0 !
b0 I
b0 H
0,
01
#95
1,
#96
0,
#97
1,
#98
0,
#99
1,
#100
0,
#101
1,
#102
0,
#103
1,
#104
0,
