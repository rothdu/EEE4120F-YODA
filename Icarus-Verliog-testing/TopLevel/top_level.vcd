$date
	Sun May 19 16:18:55 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ns
$end
$scope module TopLevel $end
$var wire 32 ! encrypters_data_ec1 [31:0] $end
$var wire 32 " encrypters_data_ec2 [31:0] $end
$var wire 1 # qspi_sending_ct $end
$var wire 1 $ qspi_ready_tp $end
$var wire 4 % qspi_data_ct [3:0] $end
$var wire 2 & encrypters_ready_pe [1:0] $end
$var wire 2 ' encrypters_program_pe [1:0] $end
$var wire 5 ( encrypters_key_rotation_pe [4:0] $end
$var wire 2 ) encrypters_data_ready_pe [1:0] $end
$var wire 2 * encrypters_data_ready_ec [1:0] $end
$var wire 32 + encrypters_data_pe [31:0] $end
$var wire 2 , encrypters_capture_ec [1:0] $end
$var reg 8 - char_read [7:0] $end
$var reg 8 . char_write [7:0] $end
$var reg 1 / char_write_progress $end
$var reg 1 0 clk $end
$var reg 32 1 key [31:0] $end
$var reg 1 2 prog_tp $end
$var reg 4 3 qspi_data_tp [3:0] $end
$var reg 1 4 qspi_ready_ct $end
$var reg 1 5 qspi_sending_tp $end
$var reg 1 6 reset $end
$var integer 32 7 fd_read [31:0] $end
$var integer 32 8 fd_write [31:0] $end
$var integer 32 9 i [31:0] $end
$var integer 32 : j [31:0] $end
$scope begin encrypter_loop[0] $end
$var parameter 2 ; e $end
$scope module e_inst $end
$var wire 1 < capture_c $end
$var wire 1 0 clk $end
$var wire 1 = data_ready_in_p $end
$var wire 1 > prog_p $end
$var wire 1 6 reset $end
$var wire 5 ? key_rotation_p [4:0] $end
$var wire 32 @ data_in_p [31:0] $end
$var reg 32 A data_in_store [31:0] $end
$var reg 32 B data_out_c [31:0] $end
$var reg 1 C data_ready_out_c $end
$var reg 32 D keyOrigin [31:0] $end
$var reg 32 E keyRotated [31:0] $end
$var reg 6 F offset [5:0] $end
$var reg 1 G ready_p $end
$var reg 3 H state [2:0] $end
$upscope $end
$upscope $end
$scope begin encrypter_loop[1] $end
$var parameter 2 I e $end
$scope module e_inst $end
$var wire 1 J capture_c $end
$var wire 1 0 clk $end
$var wire 1 K data_ready_in_p $end
$var wire 1 L prog_p $end
$var wire 1 6 reset $end
$var wire 5 M key_rotation_p [4:0] $end
$var wire 32 N data_in_p [31:0] $end
$var reg 32 O data_in_store [31:0] $end
$var reg 32 P data_out_c [31:0] $end
$var reg 1 Q data_ready_out_c $end
$var reg 32 R keyOrigin [31:0] $end
$var reg 32 S keyRotated [31:0] $end
$var reg 6 T offset [5:0] $end
$var reg 1 U ready_p $end
$var reg 3 V state [2:0] $end
$upscope $end
$upscope $end
$scope module c_inst $end
$var wire 1 0 clk $end
$var wire 2 W encrypters_data_ready [1:0] $end
$var wire 1 4 qspi_ready $end
$var wire 1 6 reset $end
$var reg 4 X encrypter_data_index [3:0] $end
$var reg 32 Y encrypter_data_packet [31:0] $end
$var reg 2 Z encrypter_index [1:0] $end
$var reg 2 [ encrypters_capture [1:0] $end
$var reg 4 \ qspi_data [3:0] $end
$var reg 1 # qspi_sending $end
$var reg 2 ] state [1:0] $end
$upscope $end
$scope module p_inst $end
$var wire 1 0 clk $end
$var wire 2 ^ encrypters_ready [1:0] $end
$var wire 1 2 prog $end
$var wire 4 _ qspi_data [3:0] $end
$var wire 1 5 qspi_sending $end
$var wire 1 6 reset $end
$var reg 4 ` encrypter_data_index [3:0] $end
$var reg 32 a encrypter_data_packet [31:0] $end
$var reg 2 b encrypter_index [1:0] $end
$var reg 32 c encrypters_data [31:0] $end
$var reg 2 d encrypters_data_ready [1:0] $end
$var reg 5 e encrypters_key_rotation [4:0] $end
$var reg 2 f encrypters_program [1:0] $end
$var reg 32 g key [31:0] $end
$var reg 4 h key_index [3:0] $end
$var reg 5 i key_rotation [4:0] $end
$var reg 1 $ qspi_ready $end
$var reg 3 j state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 I
b0 ;
$end
#0
$dumpvars
b0 j
bx i
b0 h
b0 g
b0 f
bx e
bx d
bx c
bx b
bx a
bx `
b0 _
b0 ^
b0 ]
bx \
b0 [
bx Z
bx Y
bx X
b0 W
b0 V
0U
b0 T
b0 S
b0 R
0Q
b0 P
b0 O
bx N
bx M
0L
xK
0J
b0 H
0G
b0 F
b0 E
b0 D
0C
b0 B
b0 A
bx @
bx ?
0>
x=
0<
b1 :
bx 9
b10000000000000000000000000000100 8
b10000000000000000000000000000011 7
06
05
14
b0 3
02
b10110100001101010010101110010011 1
00
0/
bx .
bx -
b0 ,
bx +
b0 *
bx )
bx (
b0 '
b0 &
bx %
0$
0#
b0 "
b0 !
$end
#1
10
#2
1$
00
16
#3
b0 Z
b1 ]
10
#4
00
06
#5
10
#6
00
12
#7
b1 j
10
#8
00
02
#9
10
#10
00
15
#11
b10 j
10
#12
00
b11 3
b11 _
b0 9
#13
b1 h
b11 g
10
#14
00
b1001 3
b1001 _
b1 9
#15
b10 h
b10010011 g
10
#16
00
b1011 3
b1011 _
b10 9
#17
b11 h
b101110010011 g
10
#18
00
b10 3
b10 _
b11 9
#19
b100 h
b10101110010011 g
10
#20
00
b101 3
b101 _
b100 9
#21
b101 h
b1010010101110010011 g
10
#22
00
b11 3
b11 _
b101 9
#23
b110 h
b1101010010101110010011 g
10
#24
00
b100 3
b100 _
b110 9
#25
b111 h
b100001101010010101110010011 g
10
#26
00
b1011 3
b1011 _
b111 9
#27
0$
b11 j
b1000 h
b10110100001101010010101110010011 g
10
#28
1L
1>
b100 j
b11 '
b11 f
b10 b
b10110100001101010010101110010011 +
b10110100001101010010101110010011 @
b10110100001101010010101110010011 N
b10110100001101010010101110010011 c
00
05
b1000 9
#29
b1 H
b1 V
10
#30
00
#31
b10 V
b10110100001101010010101110010011 R
b10 H
b10110100001101010010101110010011 D
10
#32
1U
b11 &
b11 ^
1G
00
#33
b0 b
b0 j
10
#34
0L
0>
b0 '
b0 f
1$
00
#35
10
#36
00
#37
10
#38
00
15
#39
b101 j
0K
0=
b0 i
b0 )
b0 d
b0 `
10
#40
00
b101 3
b101 _
b1011001 -
#41
b1 `
bx0101 a
10
#42
00
b1001 3
b1001 _
#43
b10 `
bx10010101 a
10
#44
00
b110 3
b110 _
b1101111 -
#45
b11 `
bx011010010101 a
10
#46
00
b1111 3
b1111 _
#47
b100 `
bx1111011010010101 a
10
#48
00
b110 3
b110 _
b1100100 -
#49
b101 `
bx01101111011010010101 a
10
#50
00
b100 3
b100 _
#51
b110 `
bx010001101111011010010101 a
10
#52
00
b110 3
b110 _
b1100001 -
#53
b111 `
bx0110010001101111011010010101 a
10
#54
00
b1 3
b1 _
#55
b1000 `
b10110010001101111011010010101 a
10
#56
1=
b1 i
b1 b
b1 )
b1 d
b0 (
b0 ?
b0 M
b0 e
b10110010001101111011010010101 +
b10110010001101111011010010101 @
b10110010001101111011010010101 N
b10110010001101111011010010101 c
b0 `
00
b10 3
b10 _
b101100 -
#57
b11 H
b1 `
b10110010001101111011010010010 a
10
#58
0=
b0 )
b0 d
00
b1100 3
b1100 _
#59
b10 `
b10110010001101111011011000010 a
b100 H
b10110100001101010010101110010011 E
b10 &
b10 ^
0G
b10110010001101111011010010101 A
10
#60
b1 *
b1 W
1C
b10100010011100111101110100000110 !
b10100010011100111101110100000110 B
00
b10 3
b10 _
b100000 -
#61
b10 ]
b11 `
b10110010001101111001011000010 a
b0 X
b10100010011100111101110100000110 Y
10
#62
1<
b1 ,
b1 [
b1 X
b110 %
b110 \
1#
b11 ]
00
b0 3
b0 _
#63
b101 H
b100 `
b10110010001100000001011000010 a
b110xxxx .
1/
10
#64
0<
b0 ,
b0 [
b10 H
b10 X
b0 %
b0 \
b11 &
b11 ^
1G
b0 *
b0 W
0C
00
b100 3
b100 _
b1001001 -
#65
b101 `
b10110010001000000001011000010 a
b1100000 .
0/
10
#66
b11 X
b1101 %
b1101 \
00
b1001 3
b1001 _
#67
b110 `
b10110100101000000001011000010 a
b11010000 .
1/
10
#68
b100 X
00
b10 3
b10 _
b100000 -
#69
b111 `
b10010100101000000001011000010 a
b11011101 .
0/
10
#70
b101 X
b11 %
b11 \
00
b0 3
b0 _
#71
b1000 `
b10100101000000001011000010 a
b111101 .
1/
10
#72
1K
b110 X
b111 %
b111 \
b10 i
b0 b
b10 )
b10 d
b1 (
b1 ?
b1 M
b1 e
b10100101000000001011000010 +
b10100101000000001011000010 @
b10100101000000001011000010 N
b10100101000000001011000010 c
b0 `
00
b110 3
b110 _
b1100001 -
#73
b11 V
b1 `
b10100101000000001011000110 a
b110111 .
0/
10
#74
0K
b0 )
b0 d
b111 X
b10 %
b10 \
00
b1 3
b1 _
#75
b10 `
b10100101000000001000010110 a
b100 V
b1101000011010100101011100100111 S
b1 &
b1 ^
0U
b1 T
b10100101000000001011000010 O
b100111 .
1/
10
#76
b1 ]
b1 Z
b1000 X
b1010 %
b1010 \
b10 *
b10 W
1Q
b1101010111111100101010111100101 "
b1101010111111100101010111100101 P
00
b110 3
b110 _
b1101101 -
#77
b10 ]
b11 `
b10100101000000011000010110 a
b0 X
b1101010111111100101010111100101 Y
b101010 .
0/
10
#78
1J
b10 ,
b10 [
b1 X
b101 %
b101 \
b11 ]
00
b1101 3
b1101 _
#79
b101 V
b100 `
b10100101001101011000010110 a
b1011010 .
1/
10
#80
0J
b0 ,
b0 [
b10 V
b10 X
b1110 %
b1110 \
b11 &
b11 ^
1U
b0 *
b0 W
0Q
00
b10 3
b10 _
b101110 -
#81
b101 `
b10100100101101011000010110 a
b1011110 .
0/
10
#82
b11 X
b101 %
b101 \
00
b1110 3
b1110 _
#83
b110 `
b10111000101101011000010110 a
1/
10
#84
b100 X
00
b10 3
b10 _
b100000 -
#85
b111 `
b1010101 .
0/
10
#86
b101 X
b1110 %
b1110 \
00
b0 3
b0 _
#87
b1000 `
b11100101 .
1/
10
#88
1=
b110 X
b1111 %
b1111 \
b11 i
b1 b
b1 )
b1 d
b10 (
b10 ?
b10 M
b10 e
b10111000101101011000010110 +
b10111000101101011000010110 @
b10111000101101011000010110 N
b10111000101101011000010110 c
b0 `
00
b101 3
b101 _
b1011001 -
#89
b11 H
b1 `
b10111000101101011000010101 a
b11101111 .
0/
10
#90
0=
b0 )
b0 d
b111 X
b1010 %
b1010 \
00
b1001 3
b1001 _
#91
b10 `
b10111000101101011010010101 a
b100 H
b11010000110101001010111001001110 E
b10 &
b10 ^
0G
b10 F
b10111000101101011000010110 A
b10101111 .
1/
10
#92
b1 ]
b0 Z
b1000 X
b110 %
b110 \
b1 *
b1 W
1C
b11010010001101100111100001011000 !
b11010010001101100111100001011000 B
00
b110 3
b110 _
b1101111 -
#93
b10 ]
b11 `
b0 X
b11010010001101100111100001011000 Y
b10100110 .
0/
10
#94
1<
b1 ,
b1 [
b1 X
b1000 %
b1000 \
b11 ]
00
b1111 3
b1111 _
#95
b101 H
b100 `
b10111000101111011010010101 a
b10000110 .
1/
10
#96
0<
b0 ,
b0 [
b10 H
b10 X
b101 %
b101 \
b11 &
b11 ^
1G
b0 *
b0 W
0C
00
b110 3
b110 _
b1100100 -
#97
b101 `
b10111001101111011010010101 a
b10000101 .
0/
10
#98
b11 X
b1000 %
b1000 \
00
b100 3
b100 _
#99
b110 `
b10010001101111011010010101 a
1/
10
#100
b100 X
b111 %
b111 \
00
b110 3
b110 _
b1100001 -
#101
b111 `
b110010001101111011010010101 a
b10000111 .
0/
10
#102
b101 X
b110 %
b110 \
00
b1 3
b1 _
#103
b1000 `
b10110010001101111011010010101 a
b1100111 .
1/
10
#104
1K
b110 X
b11 %
b11 \
b100 i
b0 b
b10 )
b10 d
b11 (
b11 ?
b11 M
b11 e
b10110010001101111011010010101 +
b10110010001101111011010010101 @
b10110010001101111011010010101 N
b10110010001101111011010010101 c
b0 `
00
b10 3
b10 _
b101100 -
#105
b11 V
b1 `
b10110010001101111011010010010 a
b1100011 .
0/
10
#106
0K
b0 )
b0 d
b111 X
b10 %
b10 \
00
b1100 3
b1100 _
#107
b10 `
b10110010001101111011011000010 a
b100 V
b10100001101010010101110010011101 S
b1 &
b1 ^
0U
b11 T
b10110010001101111011010010101 O
b100011 .
1/
10
#108
b1 ]
b1 Z
b1000 X
b1101 %
b1101 \
b10 *
b10 W
1Q
b10110111111011111010101000001000 "
b10110111111011111010101000001000 P
00
b10 3
b10 _
b100000 -
#109
b10 ]
b11 `
b10110010001101111001011000010 a
b0 X
b10110111111011111010101000001000 Y
b101101 .
0/
10
#110
1J
b10 ,
b10 [
b1 X
b1000 %
b1000 \
b11 ]
00
b0 3
b0 _
#111
b101 V
b100 `
b10110010001100000001011000010 a
b10001101 .
1/
10
#112
0J
b0 ,
b0 [
b10 V
b10 X
b0 %
b0 \
b11 &
b11 ^
1U
b0 *
b0 W
0Q
00
b111 3
b111 _
b1111001 -
#113
b101 `
b10110010001110000001011000010 a
b10000000 .
0/
10
#114
b11 X
b1010 %
b1010 \
00
b1001 3
b1001 _
#115
b110 `
b10110100101110000001011000010 a
b10100000 .
1/
10
#116
b100 X
00
b110 3
b110 _
b1101111 -
#117
b111 `
b10101010 .
0/
10
#118
b101 X
b1111 %
b1111 \
00
b1111 3
b1111 _
#119
b1000 `
b11110110100101110000001011000010 a
b11111010 .
1/
10
#120
1=
b110 X
b1110 %
b1110 \
b101 i
b1 b
b1 )
b1 d
b100 (
b100 ?
b100 M
b100 e
b11110110100101110000001011000010 +
b11110110100101110000001011000010 @
b11110110100101110000001011000010 N
b11110110100101110000001011000010 c
b0 `
00
b111 3
b111 _
b1110101 -
#121
b11 H
b1 `
b11110110100101110000001011000111 a
b11111110 .
0/
10
#122
0=
b0 )
b0 d
b111 X
b111 %
b111 \
00
b101 3
b101 _
#123
b10 `
b11110110100101110000001001010111 a
b100 H
b1000011010100101011100100111011 E
b10 &
b10 ^
0G
b100 F
b11110110100101110000001011000010 A
b1111110 .
1/
10
#124
b1 ]
b0 Z
b1000 X
b1011 %
b1011 \
b1 *
b1 W
1C
b10110101110001011011101111111001 !
b10110101110001011011101111111001 B
00
b10 3
b10 _
b100000 -
#125
b10 ]
b11 `
b0 X
b10110101110001011011101111111001 Y
b1111011 .
0/
10
#126
1<
b1 ,
b1 [
b1 X
b1001 %
b1001 \
b11 ]
00
b0 3
b0 _
#127
b101 H
b100 `
b10011011 .
1/
10
#128
0<
b0 ,
b0 [
b10 H
b10 X
b1111 %
b1111 \
b11 &
b11 ^
1G
b0 *
b0 W
0C
00
b110 3
b110 _
b1100001 -
#129
b101 `
b11110110100101100000001001010111 a
b10011111 .
0/
10
#130
b11 X
b1011 %
b1011 \
00
b1 3
b1 _
#131
b110 `
b11110110000101100000001001010111 a
b10111111 .
1/
10
#132
b100 X
00
b111 3
b111 _
b1110010 -
#133
b111 `
b11110111000101100000001001010111 a
b10111011 .
0/
10
#134
b101 X
b101 %
b101 \
00
b10 3
b10 _
#135
b1000 `
b100111000101100000001001010111 a
b1011011 .
1/
10
#136
1K
b110 X
b1100 %
b1100 \
b110 i
b0 b
b10 )
b10 d
b101 (
b101 ?
b101 M
b101 e
b100111000101100000001001010111 +
b100111000101100000001001010111 @
b100111000101100000001001010111 N
b100111000101100000001001010111 c
b0 `
00
b110 3
b110 _
b1100101 -
#137
b11 V
b1 `
b100111000101100000001001010110 a
b1011100 .
0/
10
#138
0K
b0 )
b0 d
b111 X
b101 %
b101 \
00
b101 3
b101 _
#139
b10 `
b100 V
b10000110101001010111001001110110 S
b1 &
b1 ^
0U
b101 T
b100111000101100000001001010111 O
1/
10
#140
b1 ]
b1 Z
b1000 X
b1011 %
b1011 \
b10 *
b10 W
1Q
b10100001101100110111000000100001 "
b10100001101100110111000000100001 P
00
b10 3
b10 _
b100000 -
#141
b10 ]
b11 `
b0 X
b10100001101100110111000000100001 Y
b1011011 .
0/
10
#142
1J
b10 ,
b10 [
b1 X
b1 %
b1 \
b11 ]
00
b0 3
b0 _
#143
b101 V
b100 `
b11011 .
1/
10
#144
0J
b0 ,
b0 [
b10 V
b10 X
b10 %
b10 \
b11 &
b11 ^
1U
b0 *
b0 W
0Q
00
b110 3
b110 _
b1101110 -
#145
b101 `
b10010 .
0/
10
#146
b11 X
b0 %
b0 \
00
b1110 3
b1110 _
#147
b110 `
b100111111001100000001001010110 a
b10 .
1/
10
#148
b100 X
b111 %
b111 \
00
b110 3
b110 _
b1101111 -
#149
b111 `
b100110111001100000001001010110 a
b111 .
0/
10
#150
b101 X
b11 %
b11 \
00
b1111 3
b1111 _
#151
b1000 `
b11110110111001100000001001010110 a
b110111 .
1/
10
#152
1=
b110 X
b1011 %
b1011 \
b111 i
b1 b
b1 )
b1 d
b110 (
b110 ?
b110 M
b110 e
b11110110111001100000001001010110 +
b11110110111001100000001001010110 @
b11110110111001100000001001010110 N
b11110110111001100000001001010110 c
b0 `
00
b111 3
b111 _
b1110100 -
#153
b11 H
b1 `
b11110110111001100000001001010111 a
b111011 .
0/
10
#154
0=
b0 )
b0 d
b111 X
b1 %
b1 \
00
b100 3
b100 _
#155
b10 `
b11110110111001100000001001000111 a
b100 H
b1101010010101110010011101101 E
b10 &
b10 ^
0G
b110 F
b11110110111001100000001001010110 A
b11011 .
1/
10
#156
b1 ]
b0 Z
b1000 X
b1010 %
b1010 \
b1 *
b1 W
1C
b11111011101011001110011010111011 !
b11111011101011001110011010111011 B
00
b10 3
b10 _
b101110 -
#157
b10 ]
b11 `
b0 X
b11111011101011001110011010111011 Y
b11010 .
0/
10
#158
1<
b1 ,
b1 [
b1 X
b1011 %
b1011 \
b11 ]
00
b1110 3
b1110 _
#159
b101 H
b100 `
b11110110111001101110001001000111 a
b10111010 .
1/
10
#160
0<
b0 ,
b0 [
b10 H
b10 X
b11 &
b11 ^
1G
b0 *
b0 W
0C
00
b1111 3
b1111 _
b11111111 -
#161
b101 `
b11110110111011111110001001000111 a
b10111011 .
0/
10
#162
b11 X
b110 %
b110 \
00
#163
b110 `
b11110110111111111110001001000111 a
b1101011 .
1/
10
#164
b100 X
b1110 %
b1110 \
00
#165
b111 `
b11111111111111111110001001000111 a
b1101110 .
0/
10
#166
b101 X
b1100 %
b1100 \
00
05
#167
b0 j
b11001110 .
1/
10
#168
b110 X
b1010 %
b1010 \
00
#169
b11001010 .
0/
10
#170
b111 X
b1011 %
b1011 \
00
